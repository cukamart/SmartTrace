<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.cukamartin</groupId>
    <artifactId>microservices-tracing</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>microservices-tracing-frontend</artifactId>

  <properties>
    <main.basedir>${project.parent.basedir}</main.basedir>
    <checkstyle.skip>true</checkstyle.skip>
  </properties>

  <!-- https://shekhargulati.com/2017/11/08/a-minimalist-guide-to-building-spring-boot-angular-5-applications/
   During deployment both should be packaged as a single artifact (frontend + backend).
   This means we should be using a single tool to build the application.
   The single tool in our case is Apache Maven. In this step, we will make both frontend and backend modules bundle as a single JAR-->
  <build>
    <resources>
      <resource>
        <directory>ui-src</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.6</version>
        <configuration>
          <nodeVersion>v8.11.1</nodeVersion>
          <yarnVersion>v1.3.2</yarnVersion>
        </configuration>
        <executions>
          <execution>
            <id>install node and yarn</id>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>yarn install</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn lint</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>lint</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn build</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>build</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn test</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>test</arguments>
              <!-- <failOnError>true</failOnError> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


</project>
